#
# Copyright (c) 2017, 2019 Oracle and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


security.config:
  # Set to true for production - if set to true, clear text passwords will cause failure
  require-encryption: false
  # This should be configured by system property or environment variable for production - the "master" passwords for AES decryption
  aes.insecure-passphrase: "myMasterPasswordForEncryption"
  # See documentation of pki-util
  rsa:
    # load from classpath
    keystore-resource-path: ".ssh/keystore.p12"
    # If keystore is used, alias to use from the keystore (in my example, it is "1")
    key-alias: "1"
    # Password of keystore
    keystore-passphrase: "j4c"

rsa-legacy:
  # Public key encrypted secret (can only be decrypted by private key)
  pwd3: "${RSA=aGr3sFCMQznixrgbIk9qNfoLnO1cdi3H86qweCNjxFvH4dYg5IQM1EuoyTjJaXcSCG5MBskpeA3bjnWYrzeAFFlZHuYSPsb+wJVzGLrfUColTn+BPJjpJ3rmEd3AVkJl1ASfBBMh3q3deC+rvUdhfoTGBO8sC0teUATklCQSxfHOnIxswxqrplnoGXToGiTIfehiN2IZNulRKeoDQ0AeoKREmq5au4L8OOmS+D9BqnlKMc0F1tULZ7+h3Cxla4lXC5WRPoPfHBU4vzRZOGzeDvLkRgrD60caw/wKn5M0Wy1A1cKR8E46ceBXCjJ2eWIcLyhZSAZWDe3ceNrawHZtCg==}"
  # empty string
  pwd5: "${RSA=vjjRO06oe/odWcPiJ9SpFkzjGmb4wLs8gRWTI4zJibi9Sa33nz9OMgDJrmeXv2/zKZGzvK4ihnyA4L70mu/nHnSFQ1ryTDJvrjsj0+Tt00bp1tk5h5xqYKVX54jmmC4jPe5qXcNrfIh9zVTBuVKWzv8dlE08zo/b0Qs/YaEin79ACQ645Fib0xolWeVIWwcMotRIVuez9yVYHSbC8Esc8qMVLTzXOswe0Sx9L/KwIScSw18ef/w98IGD0dfSD+xuMs/T2gYJDqyEHOPfF6t9d26851g/+a3WhZgglV7iQzg30e55v3uEF+GmsxMKLD38FAQRnQj2QYlDvCzOuRcA4Q==}"
  # wrong encryption
  pwd10: "${RSA=not really encrypted}"

  passwords: [
    "${RSA=aGr3sFCMQznixrgbIk9qNfoLnO1cdi3H86qweCNjxFvH4dYg5IQM1EuoyTjJaXcSCG5MBskpeA3bjnWYrzeAFFlZHuYSPsb+wJVzGLrfUColTn+BPJjpJ3rmEd3AVkJl1ASfBBMh3q3deC+rvUdhfoTGBO8sC0teUATklCQSxfHOnIxswxqrplnoGXToGiTIfehiN2IZNulRKeoDQ0AeoKREmq5au4L8OOmS+D9BqnlKMc0F1tULZ7+h3Cxla4lXC5WRPoPfHBU4vzRZOGzeDvLkRgrD60caw/wKn5M0Wy1A1cKR8E46ceBXCjJ2eWIcLyhZSAZWDe3ceNrawHZtCg==}"
  ]

rsa-current:
  # Public key encrypted secret (can only be decrypted by private key)
  # Note: Used AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP512_256 to encrypt via EncryptionUtil.encryptRsa
  # provided EncryptionUtil.decryptRsa is changed to use the same algorithm as the
  # current encryption, i.e. AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP256, does not work with BCFIPS
  pwd3: "${RSA-P=U/dcncTIAp+pRPeA2srIEGq5OAundSt1vekkNlzkfrzr4/oTOsq+X2pcJCtfGEcR6GJzRk0G8/vxDMRV1ZrtH0AjeWyBLQmx/AgeJA68M1q0TsE5ATSWuh6hyuLqMCq3zzJVhJ7R23gguJSbYR1jqoaJDoGRYB24ppAC154JL7Mi6Ivx5RMDFmu/6u/oIRvM/5BN/W39cuC3/wxi6clCabf3MtdNpRIULHOU6dqYNHD8uq9W34j1OpIsloNz94JExSXbSbDsUS/hGiJIBl5l9SUsyb6pU/wELEaq93rPclOoj2zHxQjr++Z7SizqhRRVnJyCiiu4l2fHmRkgKrIqEw==}"
  # empty string
  # Note: Used AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP512_256 to encrypt via EncryptionUtil.encryptRsa
  # provided EncryptionUtil.decryptRsa is changed to use the same algorithm as the
  # current encryption, i.e. AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP256, does not work with BCFIPS
  pwd5: "${RSA-P=XCl4TdWY45zjFKW6noNIdau6yH183hMLGWqqjLsT1zhmOnNxjF7nc/XkZi1tpT4vl+ypyZ4HKdUh2oQmhlN1ZYvnZkIYmru0xOQiGAsToc3fCGrz639QvBBpfeWEqOL7MyutPNSd0GqVFui4IHd35qTvBW2ynBs/vH1Cl3tfxGc9zj8/gQKQKIOX22mIVaVIrdg55HEs/iIQFRrRcFIzhIPSfWuobMeMSC3CX14jz8E2pdR81J+s2IU3H1WwJexBBvoQp8DHF/dDkzr4cPcAkVM16+kNB76bXwfJoLdo3MMvv/do7xeunlXx4+oW1NwMXxWfpySn1L1gxr2uhv/UEg==}"
  # wrong encryption
  # Note: Used AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP512_256 to encrypt via EncryptionUtil.encryptRsa
  # provided EncryptionUtil.decryptRsa is changed to use the same algorithm as the
  # current encryption, i.e. AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP256, does not work with BCFIPS
  pwd10: "${RSA-P=not really encrypted}"

  # Note: Used AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP512_256 to encrypt via EncryptionUtil.encryptRsa
  # provided EncryptionUtil.decryptRsa is changed to use the same algorithm as the
  # current encryption, i.e. AsymmetricCipher.ALGORITHM_RSA_ECB_OAEP256, does not work with BCFIPS
  passwords: [
    "${RSA-P=U/dcncTIAp+pRPeA2srIEGq5OAundSt1vekkNlzkfrzr4/oTOsq+X2pcJCtfGEcR6GJzRk0G8/vxDMRV1ZrtH0AjeWyBLQmx/AgeJA68M1q0TsE5ATSWuh6hyuLqMCq3zzJVhJ7R23gguJSbYR1jqoaJDoGRYB24ppAC154JL7Mi6Ivx5RMDFmu/6u/oIRvM/5BN/W39cuC3/wxi6clCabf3MtdNpRIULHOU6dqYNHD8uq9W34j1OpIsloNz94JExSXbSbDsUS/hGiJIBl5l9SUsyb6pU/wELEaq93rPclOoj2zHxQjr++Z7SizqhRRVnJyCiiu4l2fHmRkgKrIqEw==}"
  ]

aes-legacy:
  # Secret in clear text - for non-prod environments, this is enough. Intentionally wrapped as password to protect for prod.
  pwd1: "${CLEAR=known_password}"
  # A reference to another property (and maybe in the future to a key in a "wallet" service)
  pwd2: "${ALIAS=aes-legacy.pwd1}"
 # "master" password encrypted password
  pwd4: "${AES=YbaZGjQfwOv0htF2nmRYaOMYp0+qY/IRQUlWHfRKeTw6Q2uy33Rp8ZhTwv0oDywE}"

  # empty string
  pwd6: "${AES=D/UgMzsNb265HU1NDvdzm7tACHdsW6u1PjYEcRkV/OLiWcI+ET6Q4MKCz0zHyEh9}"
  # encrypted alias
  pwd7: "${ALIAS=aes-legacy.pwd4}"
  # missing alias
  pwd8: "${ALIAS=missing}"
  # wrong encryption
  pwd9: "${AES=not really encrypted}"

  pwd11: "${ALIAS=aes-legacy.pwd2}"
  pwd12: "${ALIAS=aes-legacy.pwd11}"

  passwords: [
    "${AES=LrbVVJOnn82fjl9ioV0pIDnYDhoNZp21KIEIjX8nTadlnlM8VQu2XXjJv8MFfHgm}",
    "${AES=xAzTBAstoNzvq2qk7szFGreIEfdxNx4OkIuLZHMUO/+p2441Sd4DkdmqgFKv0zNx}"
  ]

  objects: [
  {
    pwd: "${AES=gMTQIU+zcu9UPkGY8IKpYoVV2sxPna4O6rtlgKXtkqspSyxbLJMiu+VgqZq7okMX}"
  },
  {
    pwd: "${AES=DalgBVpVjvbqNgC+jCM5AmMG0rr4BlTf0XQbJVs85ukch/PsF8reJ1NqGHF1GqgN}"
  }
  ]

  customEnc: "${URGH=argh}"

aes-current:
  # Secret in clear text - for non-prod environments, this is enough. Intentionally wrapped as password to protect for prod.
  pwd1: "${CLEAR=known_password}"
  # A reference to another property (and maybe in the future to a key in a "wallet" service)
  pwd2: "${ALIAS=aes-current.pwd1}"
  # "master" password encrypted password
  pwd4: "${GCM=bQPPs+e2i4Sry7xB3MJWUPCnGWzx69Rgs6kskDIq8LRSJFonZ1NDlLhVhZBhtwpVdNlDa9qQSw==}"

  # empty string
  pwd6: "${GCM=p5GPxwagVVPyM3E7BvEy798rmQJojLuu957jvEZrqOKuJKeiCXyU7jONvU4=}"
  # encrypted alias
  pwd7: "${ALIAS=aes-current.pwd4}"
  # missing alias
  pwd8: "${ALIAS=missing}"
  # wrong encryption
  pwd9: "${GCM=not really encrypted}"

  pwd11: "${ALIAS=aes-current.pwd2}"
  pwd12: "${ALIAS=aes-current.pwd11}"

  passwords: [
      "${GCM=O8vR1wYqWKDXSoLiHeo1WebiWfHd+H3bGm0AsmtmZt415KgqMqS6Q9HPSkmpVe6fX1YA6l9pIA==}",
      "${GCM=dEdVNy4X7+8ySuWPf6lSlAghJhB5qGxsyrSdRGG0PFEwTHJNxNGOFuVNhaU=}"
  ]

  objects: [
      {
          pwd: "${GCM=t0ttpS+BhIwnsFhi3yklv6t+uPdMTbA8BxRhbMIM4Xtbo7O0E/khK1CNXH5lR2eyakBOlrB/PA==}"
      },
      {
          pwd: "${GCM=diobI2etFbaU+R++fToPEoAwkoAdfYNu6rlIvkVTqpjs0ZhLzbaqTQK6EdI=}"
      }
  ]

  customEnc: "${URGH=argh}"
